$Global:Date= (get-date).ToString('dd/MM/yyyy')
$Global:Account_owner= $(whoami)
#Generated Form Function
function GenerateForm {
########################################################################
# Code Generated By: SAPIEN Technologies PrimalForms (Community Edition) v1.0.9.0
# Generated On: 3/27/2017 4:45 PM
# Generated By: a_fedorenko
########################################################################

#region Import the Assemblies
[reflection.assembly]::loadwithpartialname("System.Windows.Forms") | Out-Null
[reflection.assembly]::loadwithpartialname("System.Drawing") | Out-Null
#endregion

#region Generated Form Objects
$form1 = New-Object System.Windows.Forms.Form
$btnSearch = New-Object System.Windows.Forms.Button
$btnClear = New-Object System.Windows.Forms.Button
$btnQuit = New-Object System.Windows.Forms.Button
$grpBoxUserInformation = New-Object System.Windows.Forms.GroupBox
$grpBoxName = New-Object System.Windows.Forms.GroupBox
$txtBoxname = New-Object System.Windows.Forms.TextBox
$InitialFormWindowState = New-Object System.Windows.Forms.FormWindowState
#endregion Generated Form Objects


function Enable-User {
[CmdletBinding(
   # ConfirmImpact = 'High',
    SupportsShouldProcess = $true
  

)]
    param(
        [parameter(Mandatory=$true,
        ValueFromPipeline=$true
        )]
        [string]$User
        
    )
    if ($PSCmdlet.ShouldProcess($user,"Enabling User")) {

       #Get-ADUser -Identity  $User -Server 'scedr07dc002.ce.rt.ru' -Properties Enabled,mail
       Enable-ADAccount -Identity $User -Server 'scedr07dc001.ce.rt.ru';
       Set-ADObject -Identity $User -replace @{msExchHideFromAddressLists=$false} -Server 'scedr07dc001.ce.rt.ru';
       Set-ADObject -Identity $User -Clear 'description' -Server 'scedr07dc001.ce.rt.ru';
       #@{Name="MemberOf";Expression={(Get-ADPrincipalGroupMembership -Identity $_.DistinguishedName).name -join ";" -replace ";",";`n"}} 
       $groups = ((get-aduser -Identity $User  -Properties userParameters | select userparameters).userparameters) -split ";"
            foreach ($group in $groups) 
                {
                    If ($group -ne "Domain Users")
                         {
                    $AD_group = Get-ADGroup -Identity $group -Server 'scedr07dc001.ce.rt.ru'
                    Add-ADGroupMember -Identity $AD_group -Members $User -Server 'scedr07dc001.ce.rt.ru'
                         }
                }


        }#EO IF
}

#----------------------------------------------
#Generated Event Script Blocks
#----------------------------------------------
#Provide Custom Code for events specified in PrimalForms.
$handler_btnSearch_Click= 
{
#TODO: Place custom script here
# Присваиваем переменной $Name значение из поля ФИО
       $Global:Name=$txtBoxName.Text;
    
    if(
    $global:existADUsers=Get-ADUser -Properties EmployeeID,enabled,mail,userParameters,UserPrincipalName -Filter {(Enabled -eq $false)}  -SearchBase "dc=ce,dc=rt,dc=ru" -Server "scedr07dc001.ce.rt.ru" | where {$_.name -match $Global:Name}
    )

    {
       
      
    foreach ($global:existADUser in $global:existADUsers) {
    add-Type -AssemblyName System.Windows.Forms
    $OUTPUT= [System.Windows.Forms.MessageBox]::Show("Найден пользователь:`n$($global:existAduser.name)`nEmail:`n$($global:existAduser.mail)`nEmployeeID:`n$($global:existAduser.employeeid)`nDistinguishedname:`n$($global:existAduser.distinguishedname)`nРазблокировать УЗ?" , "Status" , 4) 
        if ($OUTPUT -eq "YES" ) 
        {
        #включение учетной записи$Global:Date
        $global:existAduser | Enable-User; [System.Windows.Forms.MessageBox]::Show("УЗ пользователя $($global:existAduser.name) разблокирована.`n`n");
        $LOGoutput= "$($Global:Date);$($global:existAduser.name);$($global:existAduser.UserPrincipalName);$($Global:Account_owner)"
        $LOGoutput | out-file "C:\!Scripts\UnBlockUser\Log\CE_Восстановленные_УЗ_Posh.csv" -Append -Encoding utf8
        break; 
        if ($OUTPUT -eq "NO" ) 
        {[System.Windows.Forms.MessageBox]::Show("УЗ пользователя $($global:existAduser.name) не разблокирована.`n`n");continue}
        }
        }

        }
        
    
    
    
    
    
    else {
    add-Type -AssemblyName System.Windows.Forms
    [System.Windows.Forms.MessageBox]::Show("Пользователь не найден");
    #$richtextboxStatus.Text +="Пользователь $Global:Name не найден.`n`n"
    }

   
}
$btnQuit_OnClick= 
{
#TODO: Place custom script here
$form1.Close()
}

$btnClear_OnClick= 
{
#TODO: Place custom script here
$txtBoxname.Text = $null
}

$OnLoadForm_StateCorrection=
{#Correct the initial state of the form to prevent the .Net maximized form issue
	$form1.WindowState = $InitialFormWindowState
}

#----------------------------------------------
#region Generated Form Code
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 176
$System_Drawing_Size.Width = 348
$form1.ClientSize = $System_Drawing_Size
$form1.DataBindings.DefaultDataSourceUpdateMode = 0
$form1.Name = "form1"
$form1.Text = "Разблокировать пользователя в CE.RT.RU"


$btnSearch.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 12
$System_Drawing_Point.Y = 129
$btnSearch.Location = $System_Drawing_Point
$btnSearch.Name = "btnSearch"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 75
$btnSearch.Size = $System_Drawing_Size
$btnSearch.TabIndex = 6
$btnSearch.Text = "Поиск"
$btnSearch.UseVisualStyleBackColor = $True
$btnSearch.add_Click($handler_btnSearch_Click)

$form1.Controls.Add($btnSearch)


$btnClear.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 93
$System_Drawing_Point.Y = 129
$btnClear.Location = $System_Drawing_Point
$btnClear.Name = "btnClear"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 75
$btnClear.Size = $System_Drawing_Size
$btnClear.TabIndex = 3
$btnClear.Text = "Очистить"
$btnClear.UseVisualStyleBackColor = $True
$btnClear.add_Click($btnClear_OnClick)

$form1.Controls.Add($btnClear)


$btnQuit.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 174
$System_Drawing_Point.Y = 129
$btnQuit.Location = $System_Drawing_Point
$btnQuit.Name = "btnQuit"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 75
$btnQuit.Size = $System_Drawing_Size
$btnQuit.TabIndex = 2
$btnQuit.Text = "Выход"
$btnQuit.UseVisualStyleBackColor = $True
$btnQuit.add_Click($btnQuit_OnClick)

$form1.Controls.Add($btnQuit)


$grpBoxUserInformation.DataBindings.DefaultDataSourceUpdateMode = 0
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 12
$System_Drawing_Point.Y = 1
$grpBoxUserInformation.Location = $System_Drawing_Point
$grpBoxUserInformation.Name = "grpBoxUserInformation"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 111
$System_Drawing_Size.Width = 327
$grpBoxUserInformation.Size = $System_Drawing_Size
$grpBoxUserInformation.TabIndex = 0
$grpBoxUserInformation.TabStop = $False
$grpBoxUserInformation.Text = "Информация о пользователе"

$form1.Controls.Add($grpBoxUserInformation)

$grpBoxName.DataBindings.DefaultDataSourceUpdateMode = 0
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 15
$System_Drawing_Point.Y = 44
$grpBoxName.Location = $System_Drawing_Point
$grpBoxName.Name = "grpBoxName"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 53
$System_Drawing_Size.Width = 290
$grpBoxName.Size = $System_Drawing_Size
$grpBoxName.TabIndex = 0
$grpBoxName.TabStop = $False
$grpBoxName.Text = "ФИО"

$grpBoxUserInformation.Controls.Add($grpBoxName)
$txtBoxname.DataBindings.DefaultDataSourceUpdateMode = 0
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 7
$System_Drawing_Point.Y = 20
$txtBoxname.Location = $System_Drawing_Point
$txtBoxname.Name = "txtBoxname"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 20
$System_Drawing_Size.Width = 270
$txtBoxname.Size = $System_Drawing_Size
$txtBoxname.TabIndex = 0

$grpBoxName.Controls.Add($txtBoxname)



#endregion Generated Form Code

#Save the initial state of the form
$InitialFormWindowState = $form1.WindowState
#Init the OnLoad event to correct the initial state of the form
$form1.add_Load($OnLoadForm_StateCorrection)
#Show the Form
$form1.ShowDialog()| Out-Null

} #End Function

#Call the Function
GenerateForm
